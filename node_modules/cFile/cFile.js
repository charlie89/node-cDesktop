var fs = require('fs');
var path = require('path');
var gzip = require('zlib').gzip;

var getBuffer = (function () {
   var buffers = {};

   function addBuffer(path) {
      if (path in buffers) return;
      buffers[path] = null;
      
      if (__debug) 
         fs.watchFile(path, function () {
            buffers[path] = null;
         });
   }
   return function getBuffer(filePath, callback) {
      if (buffers[filePath]) {
         return callback(null, buffers[filePath]);
      }
      fs.exists(filePath, function (exists) {
         if (!exists) return callback("file-not-found", null);

         fs.readFile(filePath, function (err, data) {
            if (err) callback(err);
            gzip(data, function (err, buf) {
               addBuffer(filePath);
               buffers[filePath] = buf;
               callback(err, buf);
            });
         });
      });
   };
})();

var staticFile = (function () {
   function handler(path, mimeType, req, res) {
      getBuffer(path, function (err, buffer) {
         if (err === "file-not-found") {
            console.error("Couldnt find file: " + path);
            return res.error404();
         }
         if (err) console.error("FILE LOAD ERROR: " + path);
         res.writeHead(200, {
            'Content-Encoding': 'gzip',
            "Content-Length": buffer.length,
            "Content-Type": mimeType
         });
         res.end(buffer, "binary");
      });
   }
   return function staticFile(path, mime) {
      return function (req, res) {
         handler(path, mime, req, res);
      };
   };
})();

function staticDir(fileDir, mimeLookup) {
   for (var key in mimeLookup) {
      if (key.charAt(0) !== ".") 
         console.warn("Extension found without a leading periond ('.'): '" + key + "'");
   }
   return function (req, res) {
      var filePath = path.join(fileDir, req.cURL.pathname);
      var ext = path.extname(filePath).toLowerCase();
      if (!(ext in mimeLookup)) {
         console.error("Couldnt find file: " + filePath);
         return res.error404();
      }
      getBuffer(filePath, function (err, buffer) {
         if (__debug) console.log('getFile: path= '+filePath+' err='+ err + ' length=' + buffer.length);
         if (err === "file-not-found") {
            console.error("Couldnt find file: " + filePath);
            return res.error404();
         }
         if (err) console.error("FILE LOAD ERROR: " + filePath);
         
         res.writeHead(200, {
            'Content-Encoding': 'gzip',
            "Content-Length": buffer.length,
            "Content-Type": mimeLookup[ext]
         });
         res.end(buffer, "binary");
      });
   };
}

exports.staticFile = staticFile;
exports.staticDir = staticDir;