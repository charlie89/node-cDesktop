var scraperGoogle = require('./scrapers/scraper-google.js');
var scraperBookmarks = require('./scrapers/scraper-bookmarks.js');

exports.route = [{
   api: 'search',
   method: 'GET',
   callback: search
}];

exports.socketIOListener = searchEvent;

function searchEvent(socket){
   socket.on('search', function (obj) {   
      console.log('ON search: ' + obj.keyword);
      search(obj.keyword, function (value) {
         console.log('EMIT search: ' + obj.keyword);
         value.time = obj.time;
         socket.emit('search-result', value);
      });
   });
}

function search(req, res) { //for the router
   var routerCallback = function (value) {
      res.end(JSON.stringify(value));
   };
   
   res.writeHead(200, {
		'Content-Type': 'application/json; charset=UTF-8'
	});
	
	var keyword = req.cUrl.query.q;
	
	startScraping(keyword, scraperGoogle, routerCallback);
};

function search(keyword, callback) {
   startScraping(keyword, scraperGoogle, callback);
   startScraping(keyword, scraperBookmarks, callback);
};

function startScraping(keyword, scraper, callback) {
   process.nextTick(function() {
      var aScraper = new scraper();
      aScraper.on('data', callback);
	   aScraper.on('end', callback);
      aScraper.startScraper(keyword);
   });
}

module.exports.search = search;